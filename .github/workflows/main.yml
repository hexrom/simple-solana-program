name: Rust Audit Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  cargo_audit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Create audit-results directory
      run: mkdir -p audit-results

    - name: Run Clippy Linter
      run: |
        rustup component add clippy
        cargo clippy

    - name: Search and Audit Cargo Projects
      run: |
        audit_failures=0
        echo "Starting audit..."
        for cargo_toml in $(find . -name 'Cargo.toml'); do
          dir=$(dirname $cargo_toml)
          project_name=$(basename "$dir")
          audit_file="audit-results/${project_name}_audit.json"
          echo "Running cargo audit in $dir, output to $audit_file"
          (cd "$dir" && cargo generate-lockfile && cargo audit --json && echo "Audit successful" || echo "Audit failed") > "$audit_file"
          if [ ! -s "$audit_file" ]; then
            echo "No output generated for $audit_file"
            rm "$audit_file"
          else
            audit_failures=$((audit_failures+1))
            echo "Vulnerabilities found in $dir"
          fi
        done
        echo "Cargo audit completed with $audit_failures project(s) having vulnerabilities."
        if [ $audit_failures -ne 0 ]; then
          echo "Please review the vulnerabilities reported above."
          exit 0
        fi
        echo "Audit process complete. Listing audit-results directory:"
        ls -la audit-results/

    - name: Upload audit results
      uses: actions/upload-artifact@v2
      with:
        name: cargo-audit-results
        path: audit-results/
